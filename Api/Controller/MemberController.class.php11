<?php
namespace Api\Controller;
use Think\Controller;
class MemberController extends Controller {
		function __construct()
	{

		 if (!IS_API) {
	        	die("你无权访问该页面！");
	        }
	}
    // 获取个人中心用户数据
    public function index()
    {

        $id = I('request.version',1);
          // 获取用户id
        $user_id = I('request.userId',0,'intval');
        $out['success']=1;
        if (!$user_id) {
          $out['success'] = 0;
          $out['msg'] = C('no_id');
          $this->ajaxReturn($out);
        }
        
        if ($id == 1)
        {
          //获取用的积分及金额
          $sql  = "select user_id,source,user_money,face,true_name,user_name,user_rank from ".C('DB_PREFIX')."user where user_id = $user_id";
          $data = M()->query($sql);
          if ($data) {
              $data = current($data);
              $out['user'] = $data;
          }else{
            $out['msg'] = "没有你需要的用数据";
            $out['success'] = 0;
            $this->ajaxReturn($out);
          }
          // dump($data);
          $arr=array('no_pay','no_out','no_get','no_comm');
          foreach ($arr as $k => $v) {
            $where = array('user_id'=>$user_id,'is_end' => '0','statue' => $k);
            $order[$v] = M('order')->where($where)->count();
          }
          $out['order'] = $order;
          // dump($order);
          $this->ajaxReturn($out);
        }

	       
    }
    /**
     * 用户申请vip
     * @author xujun
     * @email  [jun0421@163.com]
     * @date   2015-01-06T19:10:49+0800
     * @return [type]                   [description]
     */
    public function vip()
    {

        $id = I('request.version',1);
        $provenceId =I('request.provenceId',0,'intval');
        $cityId =I('request.cityId',0,'intval');
        $area =I('request.areaId',0,'intval');
        $phone = I('request.phone');
        $arr = array(
          'province'=>$provenceId,
          'city'=>$cityId,
          'area'=>$area,
          'nickname' => I('request.nickName'),
          'email'    => I('request.email'),
          'true_name'     => I('request.name'),
          'village'      =>I('request.village'),
          'property'   =>I('request.property'),
          'flag'=>1,
        );
         // 获取用户id
        $user_id = I('request.userId',0,'intval');
        $out['success']=1;
        if (!$user_id) {
          $out['success'] = 0;
          $out['msg'] = C('no_id');
          $out['data'] = null;
          $this->ajaxReturn($out);
        }
        
        if ($id == 1)
        {
          // 根据用户所给的地区id和物业字段查询物业的id
          $w="area_id = $area and pname like '%".$arr['property']."%'";
          // dump($w);
          $property = M('property')->field('id,pname')->where($w)->find();
          // dump($property);die();
          if (!is_null($property)) {
              $arr['property_id'] = $property['id'];
              $arr['property'] = $property['pname'];            
          }else{
            $out['success'] = 0;
            $out['data'] = null;
            $out['msg'] = "你所在的物业没有与慧锐通合作，请联系物业！";
            $this->ajaxReturn($out);
          }
          // 根据物业查找用户的小区
          $w = "property_id =".$property['id']." and name like '%".$arr['village']."%'";
          // dump($w);
          $village = M('village')->field('id,name')->where($w)->find();
          // dump($village);
          if (!is_null($village)) {
              $arr['village_id'] = $village['id'];
              $arr['village'] = $village['name'];            
          }else{
            $out['success'] = 0;
            $out['data'] = null;
            $out['msg'] = "你所在的物业没有该小区，请联系小区管理员！";
            $this->ajaxReturn($out);
          }
          //dump($arr);
          //判断用户的电话和姓名是否在该物业的业主中并查询出用户的***oid
          $where = array('name'=>$arr['true_name'],'mobile'=>$phone);
          $up = array('uid'=>I('request.userId',0,'intval'));
          // dump($where);
          // dump($up);
          $bool = M('pro_owner')->where($where)->save($up);
          if ($bool) {
            $arr['user_rank'] = 2;
          }else{
            $arr['user_rank'] = 1;
          }
          $arr['user_id'] = I('request.userId',0,'intval');
          // dump($sql);
          $w= array('user_rank'=>2,'user_id'=>$arr['user_id']);
          $bool = M('user')->where($w)->find();
          if (!is_null($bool)) {
              $out['success'] = 1;
              $out['msg']="你已经是vip会员，不能再申请！";
              $out['data'] = null;
              $this->ajaxReturn($out);
          }
          //dump($arr);die();
          $bool = M('user')->save($arr);
          if ($bool) {
            //dump($arr);die();
            if ($arr['user_rank'] == 2) {
              //修改用户的申请进度
              $data = array('user_id'=>$arr['user_id'],'flag'=>2);
              M('user')->save($data);
              $out['msg'] = "申请成功";
              $out['data'] = $arr;
              $out['success'] = 1;
            }else{
              $out['msg'] = "申请成功,等待管理员审核";
              $out['data'] = $arr;
              $out['success'] = 1;
            }
            
          }else{
            $out['msg'] = "申请不成功";
            $out['data'] = null;
            $out['success'] = 1;            
          }
          $this->ajaxReturn($out);
        }

         
    }
    public function good()
    {

        $id = I('request.version',1);
       $arr = array(
        'nickname' => I('request.nickName'),
        'email'    => I('request.email'),
        'true_name'     => I('request.name'),
        'city_name'          =>I('request.city'),
        'town_name'      =>I('request.village'),
        'address'   =>I('request.address'),
        );
          // 获取用户id
        $user_id = I('request.userId',0,'intval');
        $out['success']=1;
        if (!$user_id) {
          $out['success'] = 0;
          $out['msg'] = C('no_id');
          $this->ajaxReturn($out);
        }
        
        if ($id == 1)
        {
          // 查询用户是否在申请中，防止用户重复申请
          $arr['user_id'] = $user_id;
          $arr['user_rank'] = 1;
          $bool = M('user')->save($arr);
          $out['data'] = $bool;
          if ($bool) {
            $out['msg'] = "信息成功保存";      
            $out['success'] = 1;
          }else{
            $out['msg'] = "信息输入失败";
            $out['success'] = 0;
            
          }
          $this->ajaxReturn($out);
        }

         
    }
    //个人中心我的发布
    public function myself(){
      $id = I('request.version',0,'intval');
      $uid = I('request.userId',0,'intval');
      $type = I('request.type',0,'intval');
      if ($id == 1) {
        if (!$uid || !$type) {
            $out['data']=null;
           $out['msg'] = '失败';
           $out['success'] = 0;
           $this->ajaxReturn($out);
        }
        $w = array('uid'=>$uid);
          switch ($type) {
            case '1':
              $table="pro_fetch";
              $field = "id,add_time,title,content,pic,author";
              break;
            case '2':
              $table="pro_activity";
              $field = "id,title,content,pic,author,add_time,views,uid";
              break;
            case '3':
              $table="pro_car";
              $field = "id,title,content,pic,author,add_time,views,uid";
              break;           
          }
           $data = M($table)->field($field)->where($w)->select();
           foreach ($data as $k => $v) {
             $v['add_time'] = date('Y-m-d H:i:s',$v['add_time']);
             $data[$k] = $v;
           }
           $out['data']=$data;
           $out['msg'] = '成功';
           $out['success'] = 1;
           $this->ajaxReturn($out);
      }

    }
}
